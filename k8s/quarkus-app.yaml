apiVersion: apps/v1
kind: Deployment
metadata:
  name: quarkus-app
spec:
  replicas: 4
  selector:
    matchLabels:
      app: quarkus
  template:
    metadata:
      labels:
        app: quarkus
    spec:
      imagePullSecrets:
        - name: regcred  # Remove this if your image is public
      containers:
        - name: quarkus-app
          image: ghcr.io/2425-5bhif-wmc/01-referate-marksuus/mp-health-demo:latest
          ports:
            - containerPort: 8080
          env:
            - name: QUARKUS_DATASOURCE_JDBC_URL
              value: jdbc:postgresql://postgres:5432/db
            - name: QUARKUS_DATASOURCE_USERNAME
              value: app
            - name: QUARKUS_DATASOURCE_PASSWORD
              value: app
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 2
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 2
            timeoutSeconds: 2
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /q/health/started
              port: 8080
            initialDelaySeconds: 0    # Sofort nach dem Start pr체fen
            periodSeconds: 5         # Alle 5 Sekunden wird gepr체ft, ob die App vollst채ndig gestartet ist
            timeoutSeconds: 3        # Die App hat 3 Sekunden Zeit zu antworten
            failureThreshold: 30     # Erlaubt 30 Fehlschl채ge = maximal 150 Sekunden (30 * 5s), bevor der Container neu gestartet wird
---
apiVersion: v1
kind: Service
metadata:
  name: quarkus-service
spec:
  selector:
    app: quarkus
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: NodePort
